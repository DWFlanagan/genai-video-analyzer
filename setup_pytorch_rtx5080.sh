#!/bin/bash
# Setup script for RTX 5080 PyTorch compatibility
# Based on: https://docs.astral.sh/uv/guides/integration/pytorch/

set -e

echo "üöÄ Setting up PyTorch for RTX 5080 GPU compatibility..."

# Check if we're in a uv environment
if [ -z "$VIRTUAL_ENV" ]; then
    echo "‚ùå Error: No virtual environment detected. Please run 'uv sync' first."
    exit 1
fi

echo "üì¶ Installing PyTorch with automatic backend selection for RTX 5080..."
uv pip install torch torchvision torchaudio --torch-backend=auto

echo "üß™ Testing PyTorch installation..."
python -c "
import torch
print('‚úÖ PyTorch version:', torch.__version__)
print('‚úÖ CUDA version:', torch.version.cuda)
print('‚úÖ CUDA available:', torch.cuda.is_available())
if torch.cuda.is_available():
    print('‚úÖ Device name:', torch.cuda.get_device_name(0))
    # Test GPU computation
    x = torch.randn(1000, 1000).cuda()
    y = torch.randn(1000, 1000).cuda()
    z = torch.mm(x, y)
    print('‚úÖ GPU computation successful! Result shape:', z.shape)
    print('‚úÖ GPU memory allocated:', torch.cuda.memory_allocated() / 1024**2, 'MB')
else:
    print('‚ùå CUDA not available')
    exit 1
"

echo "‚úÖ RTX 5080 PyTorch setup completed successfully!"
echo ""
echo "üìã Summary:"
echo "   - PyTorch version: $(python -c 'import torch; print(torch.__version__)')"
echo "   - CUDA support: Enabled"
echo "   - GPU: $(python -c 'import torch; print(torch.cuda.get_device_name(0))')"
echo ""
echo "üé¨ You can now run the video-summarizer with GPU acceleration:"
echo "   uv run video-summarizer /path/to/your/video.mp4"
